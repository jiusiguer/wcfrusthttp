name: Build CI

on:
  workflow_call:

jobs:
  build:
    name: Build Windows
    runs-on: windows-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Generate custom cache key from Cargo.toml
      - name: Generate custom cache key
        shell: bash
        run: |
          grep -v '^version = ' src-tauri/Cargo.toml | sha256sum | cut -d ' ' -f1 | tee cargo_hash.txt
          echo "CARGO_CACHE_KEY=$(cat cargo_hash.txt)" >> "$GITHUB_ENV"

      # Cache Rust crates
      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ env.CARGO_CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo git index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ env.CARGO_CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Cache Cargo target directory
        uses: actions/cache@v4
        with:
          path: src-tauri/target
          key: ${{ runner.os }}-cargo-target-${{ env.CARGO_CACHE_KEY }}-$(rustc --version)
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      # Cache Tauri CLI binary
      - name: Cache Tauri CLI
        id: tauri-cli-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/cargo-tauri
            ~/.cargo/bin/cargo-tauri.exe
          key: ${{ runner.os }}-tauri-cli-${{ env.CARGO_CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-tauri-cli-

      # Cache only pnpm store, avoid node_modules symlink issues
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install frontend dependencies
      - name: Install Node modules
        run: |
          npm install -g pnpm
          echo "C:/Users/runneradmin/AppData/Roaming/npm" >> $GITHUB_PATH
          pnpm install --frozen-lockfile --store ~/.pnpm-store

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "22.2"

      - name: Install Tauri CLI if not cached
        if: steps.tauri-cli-cache.outputs.cache-hit != 'true'
        run: cargo install tauri-cli --version ^2.0.0

      - name: Build with Tauri
        run: cargo tauri build
        working-directory: ./src-tauri

      - name: Create output directory
        run: mkdir output

      - name: Copy executable
        run: cp src-tauri/target/release/bundle/nsis/*.exe output/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: output/*.exe
